// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MealCard Component renders correctly 1`] = `
<React.Fragment>
  <div
    className="card"
  >
    <img
      alt="Meal"
      className="fluid-img"
      src="nice"
    />
    <div
      className="title-element flexbox wrap"
    >
      <button
        className="modal-open shrink modal-trigger"
        onClick={[Function]}
      >
        nice
      </button>
      <div
        className="flexbox"
      >
        <button
          className="btn title-button icon"
          onClick={[Function]}
        >
          ✖
        </button>
      </div>
    </div>
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    closeTimeoutMS={0}
    contentLabel="Input Modal"
    isOpen={false}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  >
    <div
      className="title flexbox"
    >
      <h3
        className="shrink"
      >
        Meal Editor
      </h3>
      <div
        className="flexbox"
      >
        <button
          className="btn title-button"
          onClick={[Function]}
        >
          ✖
        </button>
      </div>
    </div>
    <div
      className="form-box"
    >
      <Formsy
        className="form"
        disabled={false}
        getErrorMessage={[Function]}
        getErrorMessages={[Function]}
        getValue={[Function]}
        hasValue={[Function]}
        isFormDisabled={[Function]}
        isFormSubmitted={[Function]}
        isPristine={[Function]}
        isRequired={[Function]}
        isValid={[Function]}
        isValidValue={[Function]}
        mapping={null}
        onChange={[Function]}
        onError={[Function]}
        onInvalid={[Function]}
        onInvalidSubmit={[Function]}
        onReset={[Function]}
        onSubmit={[Function]}
        onValid={[Function]}
        onValidSubmit={[Function]}
        preventExternalInvalidation={false}
        resetValue={[Function]}
        setValidations={[Function]}
        setValue={[Function]}
        showError={[Function]}
        showRequired={[Function]}
        validationErrors={null}
      >
        <Formsy(MyInput)
          innerRef={[Function]}
          name="title"
          placeholder="nice"
          required={false}
          typeOfInput="text"
          validationError="Please enter the meal title"
          validationErrors={Object {}}
          validations="minLength:1"
        />
        <Formsy(MyInput)
          innerRef={[Function]}
          name="price"
          placeholder={200}
          required={false}
          typeOfInput="number"
          validationError="Please enter a price"
          validationErrors={
            Object {
              "isOnlyInt": "price must be integer",
            }
          }
          validations={
            Object {
              "isOnlyInt": [Function],
            }
          }
        />
        <Formsy(MyTextArea)
          innerRef={[Function]}
          name="description"
          placeholder="nice"
          required={false}
          validationError=""
          validationErrors={Object {}}
          validations={null}
        />
        <Formsy(MyInput)
          innerRef={[Function]}
          name="imageUrl"
          required={false}
          style={
            Object {
              "display": "none",
            }
          }
          typeOfInput="url"
          validationError="Please select an image"
          validationErrors={Object {}}
          validations="minLength:5"
        />
      </Formsy>
    </div>
    <div>
      <button
        className="btn title-button"
        onClick={[Function]}
      >
        Upload Photo
      </button>
    </div>
    <div
      id="meal_image"
    >
      <img
        alt="meal"
        className="fluid-img"
        src="nice"
      />
    </div>
    <button
      className="btn btn-disabled title-button"
      disabled={true}
      onClick={[Function]}
      type="submit"
    >
      <p>
        Continue
      </p>
    </button>
  </Modal>
</React.Fragment>
`;
