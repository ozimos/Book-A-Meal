// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MealCard Component renders correctly 1`] = `
<React.Fragment>
  <div
    className="card"
  >
    <img
      alt="Meal"
      className="fluid-img"
      src="nice"
    />
    <div
      className="title-element flexbox wrap"
    >
      <button
        className="modal-open modal-trigger"
        onClick={[Function]}
      >
        nice
      </button>
      <button
        className="btn title-button icon"
        onClick={[Function]}
      >
        ✖
      </button>
    </div>
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal-content"
    closeTimeoutMS={0}
    contentLabel="Input Modal"
    isOpen={false}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  >
    <div
      className="title flexbox"
    >
      <h4
        className="shrink"
      >
        Meal Editor
      </h4>
      <button
        className="btn title-button"
        onClick={[Function]}
      >
        ✖
      </button>
    </div>
    <Formsy
      className="form3"
      disabled={false}
      getErrorMessage={[Function]}
      getErrorMessages={[Function]}
      getValue={[Function]}
      hasValue={[Function]}
      isFormDisabled={[Function]}
      isFormSubmitted={[Function]}
      isPristine={[Function]}
      isRequired={[Function]}
      isValid={[Function]}
      isValidValue={[Function]}
      mapping={null}
      onChange={[Function]}
      onError={[Function]}
      onInvalid={[Function]}
      onInvalidSubmit={[Function]}
      onReset={[Function]}
      onSubmit={[Function]}
      onValid={[Function]}
      onValidSubmit={[Function]}
      preventExternalInvalidation={false}
      resetValue={[Function]}
      setValidations={[Function]}
      setValue={[Function]}
      showError={[Function]}
      showRequired={[Function]}
      validationErrors={null}
    >
      <Formsy(Input)
        innerRef={[Function]}
        name="title"
        placeholder="nice"
        required={false}
        typeOfInput="text"
        validationError="Please enter the meal title"
        validationErrors={Object {}}
        validations="minLength:1"
      />
      <Formsy(Input)
        innerRef={[Function]}
        name="price"
        placeholder="₦200"
        required={false}
        typeOfInput="number"
        validationError="Please enter a price"
        validationErrors={
          Object {
            "isOnlyInt": "price must be integer",
          }
        }
        validations={
          Object {
            "isOnlyInt": [Function],
          }
        }
      />
      <Formsy(TextArea)
        innerRef={[Function]}
        name="description"
        placeholder="nice"
        required={false}
        validationError=""
        validationErrors={Object {}}
        validations={null}
      />
      <Formsy(Input)
        innerRef={[Function]}
        name="imageUrl"
        required={false}
        style={
          Object {
            "display": "none",
          }
        }
        typeOfInput="url"
        validationError="Please select an image"
        validationErrors={Object {}}
        validations="minLength:5"
      />
    </Formsy>
    <t
      accept="image/*"
      className="dropzone"
      disableClick={false}
      disablePreview={false}
      disabled={false}
      maxSize={Infinity}
      minSize={0}
      multiple={true}
      onDrop={[Function]}
      preventDropOnDocument={true}
    >
      <button
        className="btn"
      >
         Select an Image
      </button>
    </t>
    <div
      id="meal_image"
    >
      <img
        alt="meal"
        className="fluid-img"
        src="nice"
      />
    </div>
    <button
      className="btn"
      disabled={true}
      onClick={[Function]}
      type="submit"
    >
      <p>
        Continue
      </p>
    </button>
  </Modal>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal-content"
    closeTimeoutMS={0}
    contentLabel="Confirmation Modal"
    isOpen={false}
    onRequestClose={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={false}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  >
    <p>
      This action will delete your meal. Do you want to continue
    </p>
    <div
      className="title flexbox"
    >
      <button
        className="btn"
        onClick={[Function]}
        style={
          Object {
            "backgroundColor": "red !important",
          }
        }
      >
        <p>
          Yes
        </p>
      </button>
      <button
        className="btn"
        onClick={[Function]}
      >
        <p>
          No
        </p>
      </button>
    </div>
  </Modal>
</React.Fragment>
`;
