// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Order Component renders correctly 1`] = `
<div
  className="contain"
>
  <header
    className="header"
  >
    <Connect(Nav) />
  </header>
  <Greeting
    firstName="user"
    isCaterer={true}
  />
  <div
    className="row"
  >
    <main
      className="col s12"
    >
      <ToastContainer
        autoClose={2000}
        bodyClassName={null}
        className={null}
        closeButton={
          <CloseButton
            ariaLabel="close"
          />
        }
        closeOnClick={true}
        draggable={true}
        draggablePercent={80}
        hideProgressBar={false}
        newestOnTop={false}
        pauseOnHover={true}
        pauseOnVisibilityChange={true}
        position="top-right"
        progressClassName={null}
        rtl={false}
        style={null}
        toastClassName={null}
        transition={[Function]}
      />
      <AccordionWrapper
        accordion={false}
        className="accordion"
        onChange={[Function]}
      >
        <AccordionItemWrapper
          accordionStore={
            AccordionContainer {
              "_listeners": Array [],
              "state": Object {
                "accordion": true,
                "items": Array [],
                "onChange": [Function],
              },
            }
          }
          className="accordion__item"
          disabled={false}
          expanded={true}
          hideBodyClassName=""
        >
          <AccordionItemTitleWrapper
            className="accordion__title"
            hideBodyClassName=""
          >
            <div
              className="title-element flexbox"
            >
              <h4
                className="long_string"
              >
                Today's Menu
              </h4>
              <div
                className="accordion__arrow u-position-relative"
                role="presentation"
              />
            </div>
          </AccordionItemTitleWrapper>
          <AccordionItemBodyWrapper
            className="accordion__body"
            hideBodyClassName="accordion__body--hidden"
          >
            <div
              className="flexbox"
            >
              <Search
                caseSensitive={false}
                className="search-input input-field"
                fuzzy={false}
                onChange={[Function]}
                throttle={200}
              />
              <button
                className="btn title-button"
                disabled={true}
                onClick={[Function]}
              >
                <p
                  className="cart-notification"
                >
                  Cart
                  <span
                    className="badge"
                  >
                    0
                  </span>
                </p>
              </button>
            </div>
            <MealCardContainer
              MealCard={[Function]}
              addClass="scroll"
              addToOrder={[Function]}
              meals={
                Array [
                  Object {
                    "id": "abc",
                    "price": 1200,
                  },
                  Object {
                    "id": "def",
                    "price": 2000,
                  },
                ]
              }
            />
          </AccordionItemBodyWrapper>
        </AccordionItemWrapper>
        <AccordionItemWrapper
          accordionStore={
            AccordionContainer {
              "_listeners": Array [],
              "state": Object {
                "accordion": true,
                "items": Array [],
                "onChange": [Function],
              },
            }
          }
          className="accordion__item"
          disabled={false}
          expanded={false}
          hideBodyClassName=""
        >
          <AccordionItemTitleWrapper
            className="accordion__title"
            hideBodyClassName=""
          >
            <div
              className="title-element flexbox"
            >
              <h4
                className="long_string"
              >
                Your Orders for Today
              </h4>
              <div
                className="accordion__arrow u-position-relative"
                role="presentation"
              />
            </div>
          </AccordionItemTitleWrapper>
          <AccordionItemBodyWrapper
            className="accordion__body"
            hideBodyClassName="accordion__body--hidden"
          >
            <p
              className="mr-auto"
            >
              Orders can only be edited up to 
                    15
                     minutes after order is placed
            </p>
            <OrderContainer
              OrderItem={[Function]}
              addOrder={[Function]}
              orders={
                Array [
                  Object {
                    "Meals": Array [
                      Object {
                        "MealOrders": Object {
                          "quantity": 2,
                        },
                        "id": "abc",
                        "price": 1200,
                      },
                      Object {
                        "MealOrders": Object {
                          "quantity": 2,
                        },
                        "id": "def",
                        "price": 2000,
                      },
                    ],
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order1",
                    "mealList": Array [
                      "abc",
                      "def",
                    ],
                    "quantityList": Array [
                      2,
                      2,
                    ],
                    "userId": "userId",
                  },
                  Object {
                    "Meals": Array [
                      Object {
                        "MealOrders": Object {
                          "quantity": 2,
                        },
                        "id": "abc",
                        "price": 1200,
                      },
                      Object {
                        "MealOrders": Object {
                          "quantity": 2,
                        },
                        "id": "def",
                        "price": 2000,
                      },
                    ],
                    "User": Object {
                      "email": "asdf",
                      "firstName": "first",
                      "lastName": "last",
                    },
                    "id": "order2",
                    "mealList": Array [
                      "abc",
                      "def",
                    ],
                    "quantityList": Array [
                      2,
                      2,
                    ],
                    "userId": "userId",
                  },
                ]
              }
            />
          </AccordionItemBodyWrapper>
        </AccordionItemWrapper>
      </AccordionWrapper>
    </main>
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      className="modal-content"
      closeTimeoutMS={0}
      contentLabel="Input Modal"
      isOpen={false}
      onRequestClose={[Function]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
    >
      <aside
        className="col s12"
      >
        <div>
          <h3>
            Order Cart
          </h3>
          <p>
            No orders here. Select a meal and click the Add to Cart button
          </p>
        </div>
      </aside>
    </Modal>
  </div>
</div>
`;
