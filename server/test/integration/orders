/* eslint-disable no-console */
import jwt from 'jsonwebtoken';
import {
  expect,
  request,
  rootURL,
  Meal,
  Order,
  defaultUser,
  defaultMeal,
  payload,
  templateTest
} from './helper';

import app from '../../src/app';

const orderUrl = `${rootURL}/orders`;
const orderIdUrl = `${rootURL}/orders/${defaultOrder.id}`;

const defaultOrder = {
  id: 'db5e4fa9-d4df-4352-a2e4-bc57f6b68e9b',
  userId: defaultUser.id,
};
context('orders integration test', () => {
// truncates Meal & Order and creates new row entries before test
// Creates JWT before test
  let token;
  before(async () => {
    try {
      await Meal.truncate({
        cascade: true
      });
      await Order.truncate({
        cascade: true
      });
      await Order.create(defaultOrder);
      await Meal.create(defaultMeal);
      token = jwt.sign(payload, process.env.TOKEN_PASSWORD, {
        expiresIn: '1h'
      });
    } catch (error) {
      console.log(error);
    }
  });
// Get All Orders
describe('GET /orders', () => {
  it('should return all orders', () =>
    request(app).get(ordersUrl).then((res) => {
      expect(res.body.data[0].id).to.equal(defaultOrder.id);
      expect(res.body.data[0].userId).to.equal(defaultOrder.userId);
    }));
  templateTest('Get All Orders', 'get', ordersUrl, null, '0', 'array');
});

// Update A Order
describe('PUT /orders/:id', () => {
  const updatedOrder = {
    meals: [defaultMeal.id]
  };

  it('should update an order', () =>
    request(app)
      .put(orderIdUrl)
      .send(updatedOrder)
      .then((res) => {
        expect(res.body.userId).to.equal(req.decoded.id);
        
      }));
  
});

// Create A Order
describe('POST /orders', () => {
  const newOrder = {
    userId: defaultUser.id,
   meals: [defaultMeal.id]
  };
  it('should create an order', () =>
    request(app)
      .post(ordersUrl)
      .send(newOrder)
      .then((res) => {
        expect(res.body.menuId).to.equal(newOrder.menuId);
        expect(res.body.mealId).to.equal(newOrder.mealId);
      }));
  templateTest(
    'Add Order',
    'post',
    ordersUrl,
    newOrder,
    'mealId',
    'object',
    '201'
  );
});
});
